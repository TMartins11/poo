_____________________________________________________________________________
                Fundamentos da orientação a objetos

Abstração - Trazer objetos do mundo real ao software por meio do destaque apenas dos aspectos essenciais para o contexto.

Classes - Um modelo (template) que incorpora características (representadas por atributos/campos/variáveis de instância) e funcionalidades
(representadas por métodos- funçoes).

Classe é constituída de membros (campos, construtores e métodos).
* É como se fosse um "formulário", que, após "preenchido", representará o objeto.

Objetos - São entidades criada a partir de classes (processo conhecido como instanciação). A classe determina a estrutura que os
objetos em nível de execução vão compartilhar. Dados específicos estão presentes em cada objeto.

objeto 1
   nome = "Patrícia"
   curso = "Odontologia"

objeto 2
   nome = "Adriano"
   curso = "Educação Física"

 Aluno objeto1 = new Aluno();
 Aluno objeto2 = new Aluno();

Wrappers - É um meio de representar valores primitivos como objetos, ganhando acesso a métodos para modificações e podendo passar valores como
referências, (de forma semelhante ao que os ponteiros fazem na linguagem C).

Classes de Wrappers: Integer, Long, Float, Double, Byte, Short, Character, Boolean.

Método Convecional de Uso

int x = 70
Integer iWrapper = Integer.valueOf(x);
System.out.println(iWrapper.ValueOf(x));

_____________________________________________________________________________
                    Pacotes e import

 Pacotes - Estruturas da linguagem Java que permitem organizar as classes de nossas aplicações e fornecem um mecanismo simples para reuso de classes.
 O reuso é conseguido a partir do comando import.

 import java.util.*;  // mostro para o compilador a localização de todas as classes do pacote java.util.

 ou

 import java.util.Date // exibo a localização de apenas uma classe.

 Classe System pertence ao pacote java.lang que é importado por default.

 É recomendado que classes sejam encapsuladas em pacotes, afim de promover a organização e reuso de objetos.
 Visto que é impossível reutilizar classes criadas direto no src do projeto.

 Pacotes são estruturas hierarquicas, as regras de nomenclatura consistem em letras minúsculas, utilizando pontos para separar hierarquicamente
 cada pacote.

 Exemplo: br.com.vascodagama.projetos.planejamento

 Os 3 cenários básicos para reuso de classes:
    1- Reuso de objetos dentro de um mesmo projeto.
    2- Reuso de classes da api do java SE (Classes fornecidas pelo JRE).
    3- Reuso de classes de terceiros. (incorporadas como dependências no pom.xml do maven. Ex.: Lombok.



